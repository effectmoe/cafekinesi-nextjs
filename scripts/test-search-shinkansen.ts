import { config } from 'dotenv';
import { resolve } from 'path';
import { hybridSearch } from '@/lib/db/document-vector-operations';

config({ path: resolve(process.cwd(), '.env.local') });

async function main() {
  const query = 'Â§ßÈò™„Åã„ÇâÊñ∞ÂππÁ∑ö„Åß„Ç´„Éï„Çß„Ç≠„Éç„Ç∑„Å´Ë°å„Åç„Åü„ÅÑ„Åß„Åô„ÄÇ„Å©„Åì„ÅÆÈßÖ„ÅßÈôç„Çä„Åü„Çâ„ÅÑ„ÅÑ„Åß„Åô„ÅãÔºü';

  console.log('üîç „Éè„Ç§„Éñ„É™„ÉÉ„ÉâÊ§úÁ¥¢„ÉÜ„Çπ„Éà');
  console.log('Ë≥™Âïè:', query);
  console.log('\n--- knowledgeBase „Çø„Ç§„Éó„Åß„ÅÆÊ§úÁ¥¢ ---\n');

  try {
    const resultsKB = await hybridSearch(query, {
      topK: 5,
      threshold: 0.03,
      type: 'knowledgeBase'
    });

    console.log(`üìö knowledgeBase Ê§úÁ¥¢ÁµêÊûú: ${resultsKB.length}‰ª∂\n`);

    resultsKB.forEach((result: any, idx: number) => {
      console.log(`${idx + 1}. ${result.title}`);
      console.log(`   „Çπ„Ç≥„Ç¢: vector=${result.vector_score?.toFixed(4)}, text=${result.text_score?.toFixed(4)}, combined=${result.combined_score?.toFixed(4)}`);
      console.log(`   Content preview: ${result.content?.substring(0, 200)}...`);
      console.log('');
    });

    console.log('\n--- „Çø„Ç§„ÉóÊåáÂÆö„Å™„Åó„Åß„ÅÆÊ§úÁ¥¢ ---\n');

    const resultsAll = await hybridSearch(query, {
      topK: 5,
      threshold: 0.03
    });

    console.log(`üìã ÂÖ®‰ΩìÊ§úÁ¥¢ÁµêÊûú: ${resultsAll.length}‰ª∂\n`);

    resultsAll.forEach((result: any, idx: number) => {
      console.log(`${idx + 1}. [${result.type}] ${result.title}`);
      console.log(`   „Çπ„Ç≥„Ç¢: vector=${result.vector_score?.toFixed(4)}, text=${result.text_score?.toFixed(4)}, combined=${result.combined_score?.toFixed(4)}`);
      console.log(`   Content preview: ${result.content?.substring(0, 200)}...`);
      console.log('');
    });

  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
    process.exit(1);
  }
}

main();
