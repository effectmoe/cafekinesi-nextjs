import { config } from 'dotenv';
import { resolve } from 'path';
import { sql } from '@vercel/postgres';

config({ path: resolve(process.cwd(), '.env.local') });

async function main() {
  console.log('üîç document_embeddings„ÉÜ„Éº„Éñ„É´„ÅÆ„Éä„É¨„ÉÉ„Ç∏„Éô„Éº„ÇπÊÉÖÂ†±„ÇíÁ¢∫Ë™ç...\n');

  try {
    // „Éä„É¨„ÉÉ„Ç∏„Éô„Éº„ÇπÂÖ®‰ª∂„ÇíÁ¢∫Ë™ç
    const allKB = await sql`
      SELECT id, type, title,
             LEFT(content, 100) as content_preview,
             LENGTH(content) as content_length,
             metadata
      FROM document_embeddings
      WHERE type = 'knowledgeBase'
      ORDER BY updated_at DESC;
    `;

    console.log('üìö „Éä„É¨„ÉÉ„Ç∏„Éô„Éº„ÇπÊñáÊõ∏Êï∞:', allKB.rows.length, '‰ª∂\n');

    allKB.rows.forEach((row: any, idx: number) => {
      console.log(`${idx + 1}. ${row.title}`);
      console.log(`   ID: ${row.id}`);
      console.log(`   Content length: ${row.content_length} ÊñáÂ≠ó`);
      console.log(`   Preview: ${row.content_preview}...`);
      console.log(`   Metadata: ${JSON.stringify(row.metadata)}`);
      console.log('');
    });

    // „Ç¢„ÇØ„Çª„ÇπÊÉÖÂ†±„ÇíÂê´„ÇÄ„Éä„É¨„ÉÉ„Ç∏„Éô„Éº„Çπ„ÇíÊ§úÁ¥¢
    const accessKB = await sql`
      SELECT id, type, title, content, metadata
      FROM document_embeddings
      WHERE type = 'knowledgeBase'
        AND (title LIKE '%„Ç¢„ÇØ„Çª„Çπ%' OR content LIKE '%Êñ∞ÂππÁ∑ö%' OR content LIKE '%ÂçöÂ§öÈßÖ%')
      LIMIT 3;
    `;

    console.log('üöÑ „Ç¢„ÇØ„Çª„ÇπÊÉÖÂ†±„ÇíÂê´„ÇÄ„Éä„É¨„ÉÉ„Ç∏„Éô„Éº„Çπ:', accessKB.rows.length, '‰ª∂\n');

    accessKB.rows.forEach((row: any, idx: number) => {
      console.log(`${idx + 1}. ${row.title}`);
      console.log(`   Content:`);
      console.log(row.content);
      console.log('');
    });

  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
    process.exit(1);
  }
}

main();
