import { config } from 'dotenv';
import { resolve } from 'path';
import { sql } from '@vercel/postgres';

config({ path: resolve(process.cwd(), '.env.local') });

async function searchWrongContent() {
  console.log('üîç „Äå„ÉÅ„Éº„Ç∫„Ç±„Éº„Ç≠„Äç„Äå„Ç≥„Éº„Éí„Éº„Äç„ÇíÂê´„ÇÄ„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíÊ§úÁ¥¢...\n');

  try {
    // „ÉÅ„Éº„Ç∫„Ç±„Éº„Ç≠„ÇíÂê´„ÇÄ„Éâ„Ç≠„É•„É°„É≥„Éà
    const cheesecake = await sql`
      SELECT id, type, title,
             LEFT(content, 300) as content_preview,
             metadata
      FROM document_embeddings
      WHERE content ILIKE '%„ÉÅ„Éº„Ç∫„Ç±„Éº„Ç≠%' OR content ILIKE '%cheesecake%'
         OR title ILIKE '%„ÉÅ„Éº„Ç∫„Ç±„Éº„Ç≠%';
    `;

    console.log('üìã „ÉÅ„Éº„Ç∫„Ç±„Éº„Ç≠„ÇíÂê´„ÇÄ„Éâ„Ç≠„É•„É°„É≥„Éà:', cheesecake.rows.length, '‰ª∂\n');
    cheesecake.rows.forEach((row: any) => {
      console.log(`- [${row.type}] ${row.title}`);
      console.log(`  ID: ${row.id}`);
      console.log(`  Preview: ${row.content_preview}`);
      console.log('');
    });

    // „Ç≥„Éº„Éí„Éº„ÇíÂê´„ÇÄ„Éâ„Ç≠„É•„É°„É≥„Éà
    const coffee = await sql`
      SELECT id, type, title,
             LEFT(content, 300) as content_preview,
             metadata
      FROM document_embeddings
      WHERE (content ILIKE '%„Ç≥„Éº„Éí„Éº%' OR content ILIKE '%coffee%' OR content ILIKE '%„Éñ„É¨„É≥„Éâ„Ç≥„Éº„Éí„Éº%')
         AND (content ILIKE '%„Åä„Åô„Åô„ÇÅ%' OR content ILIKE '%„É°„Éã„É•„Éº%')
      LIMIT 5;
    `;

    console.log('‚òï „Ç≥„Éº„Éí„Éº+„Åä„Åô„Åô„ÇÅ/„É°„Éã„É•„Éº„ÇíÂê´„ÇÄ„Éâ„Ç≠„É•„É°„É≥„Éà:', coffee.rows.length, '‰ª∂\n');
    coffee.rows.forEach((row: any) => {
      console.log(`- [${row.type}] ${row.title}`);
      console.log(`  ID: ${row.id}`);
      console.log(`  Preview: ${row.content_preview}`);
      console.log('');
    });

    // „Äå„Åä„Åô„Åô„ÇÅ„É°„Éã„É•„Éº„Äç„ÇíÂê´„ÇÄ„Éâ„Ç≠„É•„É°„É≥„Éà
    const recommend = await sql`
      SELECT id, type, title,
             LEFT(content, 500) as content_preview,
             metadata
      FROM document_embeddings
      WHERE content ILIKE '%„Åä„Åô„Åô„ÇÅ„É°„Éã„É•„Éº%' OR content ILIKE '%„Åä„Åô„Åô„ÇÅ%„É°„Éã„É•„Éº%'
      LIMIT 5;
    `;

    console.log('üçΩÔ∏è „Åä„Åô„Åô„ÇÅ„É°„Éã„É•„Éº„ÇíÂê´„ÇÄ„Éâ„Ç≠„É•„É°„É≥„Éà:', recommend.rows.length, '‰ª∂\n');
    recommend.rows.forEach((row: any) => {
      console.log(`- [${row.type}] ${row.title}`);
      console.log(`  ID: ${row.id}`);
      console.log(`  Preview: ${row.content_preview}`);
      console.log('');
    });

  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
  }
}

searchWrongContent();
